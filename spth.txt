    lpPath - An optional parameter, that if specified, supplies the
        search path to be used when locating the file.  If this
        parameter is not specified, the default windows search path is
        used.  The default path is:

          - The current directory

          - The windows directory

          - The windows system directory

          - The directories listed in the path environment variable

strpbrk(pcszPath, g_cszPathSeparators) PUBLIC_DATA const char g_cszPathSeparators[]= ":/\\";
NO SearchPath(NULL) (also searches relative paths)
YES GetFullPathName

SearchPath

SearchPath uses the following algorithm
First it checks if supplied filename is relative path (completely relative - to both current drive and directory)
If it's not relative - it applies GetFullPathName to filename and returns resulting path (whatever it might be)
If it's relative, real search commences
It searches supplied search path or, in case it is missing, searches these paths:
	- Current image directory
	- Current working directory (if SafeProcessSearchMode is 0 or not supported)
	- Windows system directory (GetSystemDirectory())
	- Windows 16-bit system directory (GetWindowsDirectory()+\system, NT only)
	- Windows directory (GetWindowsDirectory())
	- Directories listed in the PATH environment variable
	- Current working directory (if SafeProcessSearchMode is 1)
Supplying extension changes behavior in the following way:
If non relative filename, before applying GetFullPathName function checks if file exists and if not - appends extension and tries this way
If relative filename and filename lacks extension, it is appended before the search commences

For Win9x search order is:
	- Current image directory
	- Current working directory (check this in kernel32)
	- Windows system directory (GetSystemDirectory())
	- Windows directory (GetWindowsDirectory())
	- Directories listed in the PATH environment variable
And, according to MSDN, on Win 9x SearchPath search algorithm is the same as for LoadLibrary here